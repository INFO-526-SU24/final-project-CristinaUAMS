---
title: "Coffee Curiosity"
subtitle: "INFO 526 - Summer 2024 - Final Project"
description: "Evaluation of data recovered from coffee taste test"
author: "Cristina Lafuente"
title-slide-attributes:
  data-background-image: images/beansHD.jpg
  data-background-size: stretch
  data-background-opacity: "0.5"
  data-slide-number: none
format:
  revealjs:
    theme:  ['data/customtheming.scss']
  
editor: visual
execute:
  echo: false
---

```{r}
#| label: load-packages
#| include: false



if (!require("pacman")) 
  install.packages("pacman")
# Load packages here
pacman::p_load(dplyr,
               ggpmisc,
               ggthemes,
               grid,
               gridExtra,
               here,
               palettetown,
               paletteer,
                patchwork,
                showtext,
                sysfonts,
               tidymodels,
               tidyverse)

```

```{r}
#| label: setup
#| include: false


sysfonts::font_add_google(name = "Playfair Display", family = "Playfair Display")
showtext::showtext_auto()
# Plot theme
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 16, base_family = "Playfair Display"))

# For better figure resolution
knitr::opts_chunk$set(
  fig.retina = 3, 
  dpi = 300, 
  fig.width = 6, 
  fig.asp = 0.618 
  )
```

```{r}
#| label: load-data
#| include: false
# Load data here
coffeeData <- readr::read_csv(('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-05-14/coffee_survey.csv'))

coffeeAcidityCGA <- readr::read_csv(here("data/Acids_in_Coffee_-CGAs.csv"))
coffeeAcidityOA <- readr::read_csv(here("data/Acids_in_Coffee_-OAs.csv"))
```

# Using Quarto for presentations

## Quarto

-   The presentation is created using the Quarto CLI

-   `##` sets the start of a new slide

## Layouts

You can use plain text

::: columns
::: {.column width="40%"}
-   or bullet points[^1]
:::

::: {.column width="60%"}
or in two columns
:::
:::

[^1]: And add footnotes

-   like

-   this

## Code

```{r, echo=FALSE}
CGA <- coffeeAcidityCGA[1:33] |> glimpse()

OA <- coffeeAcidityOA[1:35] |> glimpse()

cga_by_roast <- CGA |>
  group_by(Roast) |> 
  mutate(roast_average_cga = mean(`Total CGA`, na.rm = TRUE) ) |>
  select(Type, Roast, Extraction, `Total CGA`, roast_average_cga)

cga_by_roast |> glimpse()

oa_by_roast <- OA |>
  group_by(Roast) |>
  mutate(roast_average_oa = mean(Total, na.rm = TRUE)) |>
  select(Type, Roast, Extraction, Total, roast_average_oa)

oa_by_roast |> glimpse()

roast_table <- oa_by_roast |>
  inner_join(cga_by_roast, 
             by = "Roast", 
             suffix = c("_oa", "_cga"), 
             relationship = "many-to-many") 
  

select_coffee_data <- coffeeData |>
  select(submission_id, coffee_a_bitterness, coffee_a_acidity, coffee_a_personal_preference,
         coffee_b_bitterness, coffee_b_acidity, coffee_b_personal_preference, 
         coffee_c_bitterness, coffee_c_acidity, coffee_c_personal_preference,
         coffee_d_bitterness, coffee_d_acidity, coffee_d_personal_preference,
         prefer_overall, political_affiliation) |> glimpse()

light_table <- roast_table |> 
  filter(Roast == "Light") |>
  select(Roast, roast_average_oa, roast_average_cga) |>
  rename(`Light OA` = roast_average_oa, `Light CGA` = roast_average_cga) |> 
  distinct()
  

select_coffee_data |> 
  select(coffee_a_acidity, coffee_a_bitterness, prefer_overall) |>
  pivot_longer(!prefer_overall,  names_to = "flavor_profile", values_to = "rating") |>
  ggplot(aes( prefer_overall,  fill = as.factor(rating))) +
  geom_bar(aes(fill = as.factor(rating)), position = "dodge") +
  annotate(geom = "table",
           x =0.25, y = 800,
           label = list(light_table),
           hjust = 0.8, vjust = 0.3, ) +
 
facet_wrap(~flavor_profile) +
  coord_flip() +
  scale_fill_paletteer_d("palettetown::zigzagoon") 
  
```

## Plots

```{r}

```

## Plot and text

::: columns
::: {.column width="50%"}
-   Some text

-   goes here
:::

::: {.column width="50%"}
```{r, warning=FALSE, fig.width=5.5}

```
:::
:::

# A new section...

## Tables

If you want to generate a table, make sure it is in the HTML format (instead of Markdown or other formats), e.g.,

```{r}

```

## Images

![Image credit: Danielle Navarro, Percolate.](images/watercolour_sys02_img34_teacup-ocean.png){fig-align="center" width="500"}

## Math Expressions {.smaller}

You can write LaTeX math expressions inside a pair of dollar signs, e.g.Â \$\\alpha+\\beta\$ renders $\alpha + \beta$. You can use the display style with double dollar signs:

```         
$$\bar{X}=\frac{1}{n}\sum_{i=1}^nX_i$$
```

$$
\bar{X}=\frac{1}{n}\sum_{i=1}^nX_i
$$

Limitations:

1.  The source code of a LaTeX math expression must be in one line, unless it is inside a pair of double dollar signs, in which case the starting `$$` must appear in the very beginning of a line, followed immediately by a non-space character, and the ending `$$` must be at the end of a line, led by a non-space character;

2.  There should not be spaces after the opening `$` or before the closing `$`.

# Wrap up

## Feeling adventurous?

-   You are welcomed to use the default styling of the slides. In fact, that's what I expect majority of you will do. You will differentiate yourself with the content of your presentation.

-   But some of you might want to play around with slide styling. Some solutions for this can be found at https://quarto.org/docs/presentations/revealjs.
